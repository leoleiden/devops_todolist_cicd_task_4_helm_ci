name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name }} - ${{ github.sha }}

on:
  push:
    branches: ["main", "your_name"]
  pull_request:
    branches: ["main"]

env:
  PythonVersion: 3.8
  ARTIFACT_NAME: repo-checkout

jobs:
  python-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        id: checkout_repo

      - name: Upload Repository as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: .

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python manage.py test

      - name: Generate Report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Linting
        run: |
          flake8 . --show-source --statistics --exit-zero

      - name: Check Complexity
        run: |
          flake8 . --exit-zero --max-complexity=6

      - name: Upload python artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: .

  docker-ci:
    needs: python-ci
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/your_name'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Download Repository Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: .

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          push: true
          tags: leoleiden/devops_cicd_repo:${{ github.sha }}

  helm-ci:
    needs: docker-ci
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/your_name'
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: .

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Helm Lint
        run: |
          helm lint helm-charts/todoapp/

      - name: Helm Template
        run: |
          helm template todoapp helm-charts/todoapp/ > todoapp.yaml

      - name: Package Helm chart
        run: |
          helm package helm-charts/todoapp/

      - name: Upload Helm chart package
        uses: actions/upload-artifact@v4
        with:
          name: todoapp-chart
          path: todoapp-*.tgz